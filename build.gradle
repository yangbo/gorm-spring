buildscript {
    repositories {
        mavenCentral()
        //jcenter()
    }
}
plugins {
    id 'groovy'
    id 'java-library'
    id 'maven-publish'
    //id "com.jfrog.bintray" version "1.8.5"
}

group 'com.telecwin'
version '1.0.1'

//sourceCompatibility = '1.8'
//targetCompatibility = '1.8'

[compileJava, compileTestJava, compileGroovy, compileTestGroovy]*.options*.encoding = 'UTF-8'

repositories {
    mavenCentral()
    //jcenter()
}

dependencies {
    api 'org.grails:grails-datastore-gorm-hibernate5:7.2.1'
    api 'org.springframework:spring-expression:5.3.15'
    implementation group: 'org.slf4j', name: 'slf4j-api', version: '1.7.25'
    implementation group: 'ch.qos.logback', name: 'logback-classic', version: '1.2.3'

    // for junit test
    testImplementation(platform('org.junit:junit-bom:5.8.2'))
    testImplementation('org.junit.jupiter:junit-jupiter')

    // use hsql-db
    testImplementation group: 'org.spockframework', name: 'spock-core', version: '2.2-M1-groovy-3.0'
    testImplementation group: 'org.hsqldb', name: 'hsqldb', version: '2.4.0'

    // use sqlite-db
    //testImplementation group: 'org.xerial', name: 'sqlite-jdbc', version: '3.32.3'
    //testImplementation group: 'com.github.gwenn', name: 'sqlite-dialect', version: '0.1.1'
}

test {
    useJUnitPlatform()
    testLogging {
        events "passed", "skipped", "failed"
    }
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

javadoc.failOnError = false
task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives sourcesJar
    archives javadocJar
}


/*
 * bintray 不能使用了，所以下面的发布也无效。
 *
def pomConfig = {
    licenses {
        license {
            name "MIT"
            url "https://github.com/yangbo/gorm-spring/blob/main/LICENSE"
            distribution "repo"
        }
    }
    developers {
        developer {
            id "bobyang"
            name "Bob Yang"
            email "bo.yang@telecwin.com"
        }
    }
    scm {
        url "https://github.com/yangbo/gorm-spring"
    }
}

publishing {
    publications {
        mavenPublication(MavenPublication) {
            from components.java
            artifact sourcesJar {
                classifier "sources"
            }
            artifact javadocJar {
                classifier "javadoc"
            }
            groupId 'com.telecwin'
            artifactId 'gorm-spring'
            version version
            pom.withXml {
                def root = asNode()
                root.appendNode('description', 'A library that make configure GORM in spring environment easy.')
                root.appendNode('name', 'GORM Spring integration library')
                root.appendNode('url', 'https://github.com/yangbo/gorm-spring')
                root.children().last() + pomConfig
            }
        }
    }

    repositories {
        maven {
            name = 'myRepo'
            url = "file://${buildDir}/repo"
        }
    }

    bintray {
        user = System.getenv('BINTRAY_USER')
        key = System.getenv('BINTRAY_KEY')
        publications = ['mavenPublication']

        pkg {
            repo = 'libs'
            name = 'gorm-spring'
            userOrg = 'bobyang'
            licenses = ['MIT']
            vcsUrl = 'https://github.com/yangbo/gorm-spring.git'
            version {
                name = project.version
                desc = project.version
                released  = new Date()
            }
        }
    }
}
*/
